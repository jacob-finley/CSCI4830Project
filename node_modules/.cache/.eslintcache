[{"/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/index.js":"1","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/reportWebVitals.js":"2","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/App.js":"3","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/quiz.js":"4","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/questions.js":"5"},{"size":535,"mtime":1687819535733,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1687819535733,"results":"8","hashOfConfig":"7"},{"size":269,"mtime":1687819535732,"results":"9","hashOfConfig":"7"},{"size":3281,"mtime":1688138344920,"results":"10","hashOfConfig":"7"},{"size":5832,"mtime":1688694710657,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"10io7qv",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/index.js",[],[],[],"/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/reportWebVitals.js",[],[],"/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/App.js",["30"],[],"import React from 'react';\n\nimport questions from './questions';\nimport Quiz from './quiz';\nimport './App.css'\n\nfunction App() {\n    return (\n        <div>\n            <h1>College Degree Helper</h1>\n            <Quiz />\n        </div>\n    );\n    \n}\n\nexport default App;","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/quiz.js",["31","32"],[],"// this file contains core backend functionality\nimport React from 'react';\nimport questions from './questions';\n\nfunction Quiz() {\n    const [currentQuestion, setCurrentQuestion] = React.useState(0);\n    const [showScore, setShowScore] = React.useState(false);\n    // constants for 'points' of different college\n    const [scores, setScores] = React.useState({\n        collegeARTSCI: 0,\n        collegeBA: 0,\n        collegeEDU: 0,\n        collegeCOM: 0,\n        collegeSCITECH: 0,\n        collegePUBLIC: 0,\n    });\n\n    // reads button presses and updates scores as needed.\n    const handleAnswerButtonClick = (scores) => {\n        setScores((prevScores) => ({\n\n            collegeARTSCI: prevScores.collegeARTSCI + scores.collegeARTSCI,\n            collegeBA: prevScores.collegeBA + scores.collegeBA,\n            collegeEDU: prevScores.collegeEDU + scores.collegeEDU,\n            collegeCOM: prevScores.collegeCOM + scores.collegeCOM,\n            collegeSCITECH: prevScores.collegeSCITECH + scores.collegeSCITECH,\n            collegePUBLIC: prevScores.collegePUBLIC + scores.collegePUBLIC,\n\n\n        }));\n        // advances the question if there are more questions in question.js to go through\n        const nextQuestion = currentQuestion + 1;\n        if (nextQuestion < questions.length) {\n            setCurrentQuestion(nextQuestion);\n        // otherwise goes to the end screen, showScore    \n        } else {\n            setShowScore(true);\n        }\n    };\n\n    // finds the colleges that have the max value and returns them\n    const bestFits = (scores) => {\n        let maxValue = 0;\n        for (const [key, value] of Object.entries(scores)) {\n            maxValue = Math.max(maxValue, value)\n        }\n        let bestFits = [];\n        for (const [key, value] of Object.entries(scores)) {\n            if (maxValue == value) {\n                bestFits.push(key);\n            }\n        }\n        return bestFits.join(' and ');\n    }\n\n    // the final screen shows all points accumulated for testing purposes.\n    return (\n        <div className=\"question-container\">\n\n            {showScore ? (\n                \n                <div className=\"final-result-container\">\n                    <h2>Quiz Results</h2>\n                    <h3>Best Fits: {[bestFits(scores)]}</h3>\n                    <br></br>\n                </div>\n\n            ) : (\n                // handles displaying buttons and the current question. \n                // pulls questions from questions.js\n                <div className=\"question-card\">\n                    <h2><div className=\"question-number\">Question {currentQuestion + 1} of  {questions.length}</div></h2>\n                    <h2>{questions[currentQuestion].questionText}</h2>\n                    <div className=\"answer-container\">\n                    {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n                        <button\n                            key={index}\n                            onClick={() => handleAnswerButtonClick(answerOption.scores)}\n                        >\n                            {answerOption.answerText}\n                        </button>\n                    ))}\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default Quiz;","/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/questions.js",["33","34","35"],[],{"ruleId":"36","severity":1,"message":"37","line":3,"column":8,"nodeType":"38","messageId":"39","endLine":3,"endColumn":17},{"ruleId":"36","severity":1,"message":"40","line":44,"column":21,"nodeType":"38","messageId":"39","endLine":44,"endColumn":24},{"ruleId":"41","severity":1,"message":"42","line":49,"column":26,"nodeType":"43","messageId":"44","endLine":49,"endColumn":28},{"ruleId":"36","severity":1,"message":"45","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":12},{"ruleId":"36","severity":1,"message":"46","line":5,"column":10,"nodeType":"38","messageId":"39","endLine":5,"endColumn":18},{"ruleId":"47","severity":2,"message":"48","line":187,"column":16,"nodeType":"38","messageId":"49","endLine":187,"endColumn":25},"no-unused-vars","'questions' is defined but never used.","Identifier","unusedVar","'key' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Papa' is defined but never used.","'usestate' is defined but never used.","no-undef","'questions' is not defined.","undef"]