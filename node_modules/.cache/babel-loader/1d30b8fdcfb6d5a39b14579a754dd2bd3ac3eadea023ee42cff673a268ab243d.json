{"ast":null,"code":"// this file contains all the question data.\n// you should be able to copy paste to make more questions.\n// for now it's silly and requires 0 for all the other answers as it doesn't like null values, feel free to change but this should do for now\nimport Papa from \"papaparse\";\nimport { usestate } from 'react';\n\n/*\nconst fs = require('fs');\nconst readline = require('readline');\nconst stream = fs.createReadStream(\"./number.csv\");\nconst reader = readline.createInterface({ input: stream });\nconst questions = [];\n\nreader.on(\"line\", (row) => {\n    let tmp = row.split(',');\n    questions.push({\n        questionText: tmp[0],\n        answerOptions: [\n            {\n            answerText: tmp[1],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[2],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[3],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[4],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[5],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[6],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            }\n        ]\n    });\n})\nreader.on(\"close\", () => {\n    console.log(questions);\n})\n*/\n\nconst questions = [\n//Question 1\n\n{\n  questionText: 'Question 1: pick a college',\n  answerOptions: [{\n    answerText: 'Arts and Sciences',\n    scores: {\n      collegeARTSCI: 1,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Business and Administration',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 1,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Education',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 1,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Communications',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 1,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Science and Technology',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 1,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Public Affairs',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 1\n    }\n  }]\n},\n//Question 2\n\n{\n  questionText: 'Question 2: pick a college',\n  answerOptions: [{\n    answerText: 'Arts and Sciences',\n    scores: {\n      collegeARTSCI: 1,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Business and Administration',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 1,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Education',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 1,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Communications',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 1,\n      collegeSCITECH: 0,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Science and Technology',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 1,\n      collegePUBLIC: 0\n    }\n  }, {\n    answerText: 'Public Affairs',\n    scores: {\n      collegeARTSCI: 0,\n      collegeBA: 0,\n      collegeEDU: 0,\n      collegeCOM: 0,\n      collegeSCITECH: 0,\n      collegePUBLIC: 1\n    }\n  }]\n}\n\n//Question 3\n];\n\nexport default questions;","map":{"version":3,"names":["Papa","usestate","questions","questionText","answerOptions","answerText","scores","collegeARTSCI","collegeBA","collegeEDU","collegeCOM","collegeSCITECH","collegePUBLIC"],"sources":["/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/questions.js"],"sourcesContent":["// this file contains all the question data.\n// you should be able to copy paste to make more questions.\n// for now it's silly and requires 0 for all the other answers as it doesn't like null values, feel free to change but this should do for now\nimport Papa from \"papaparse\";\nimport { usestate } from 'react';\n\n\n\n\n/*\nconst fs = require('fs');\nconst readline = require('readline');\nconst stream = fs.createReadStream(\"./number.csv\");\nconst reader = readline.createInterface({ input: stream });\nconst questions = [];\n\nreader.on(\"line\", (row) => {\n    let tmp = row.split(',');\n    questions.push({\n        questionText: tmp[0],\n        answerOptions: [\n            {\n            answerText: tmp[1],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[2],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[3],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[4],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[5],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[6],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            }\n        ]\n    });\n})\nreader.on(\"close\", () => {\n    console.log(questions);\n})\n*/\n\n\nconst questions = [\n\n    //Question 1\n\n    {\n        questionText: 'Question 1: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0 \n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 2\n\n    {\n        questionText: 'Question 2: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 3\n\n\n    \n];\n\n\nexport default questions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}