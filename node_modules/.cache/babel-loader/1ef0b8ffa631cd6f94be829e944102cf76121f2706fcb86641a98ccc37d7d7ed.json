{"ast":null,"code":"// this file contains all the question data.\n// you should be able to copy paste to make more questions.\n// for now it's silly and requires 0 for all the other answers as it doesn't like null values, feel free to change but this should do for now\n\nconst fs = require('fs');\nconst readline = require('readline');\nconst stream = fs.createReadStream(\"./number.csv\");\nconst reader = readline.createInterface({\n  input: stream\n});\nconst questions = [];\nreader.on(\"line\", row => {\n  let tmp = row.split(',');\n  questions.push({\n    questionText: tmp[0],\n    answerOptions: [{\n      answerText: tmp[1],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }, {\n      answerText: tmp[2],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }, {\n      answerText: tmp[3],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }, {\n      answerText: tmp[4],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }, {\n      answerText: tmp[5],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }, {\n      answerText: tmp[6],\n      scores: {\n        collegeARTSCI: tmp[7],\n        collegeBA: tmp[8],\n        collegeEDU: tmp[9],\n        collegeCOM: tmp[10],\n        collegeSCITECH: tmp[11],\n        collegePUBLIC: tmp[12]\n      }\n    }]\n  });\n});\nreader.on(\"close\", () => {\n  console.log(questions);\n});\n\n/*\nconst questions = [\n\n    //Question 1\n\n    {\n        questionText: 'Question 1: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0 \n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 2\n\n    {\n        questionText: 'Question 2: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 3\n\n\n    \n];\n*/\n\nexport default questions;","map":{"version":3,"names":["fs","require","readline","stream","createReadStream","reader","createInterface","input","questions","on","row","tmp","split","push","questionText","answerOptions","answerText","scores","collegeARTSCI","collegeBA","collegeEDU","collegeCOM","collegeSCITECH","collegePUBLIC","console","log"],"sources":["/Users/jacobfinley/Documents/classes/Intro to Soft Eng/Project/CSCI4830Project/src/questions.js"],"sourcesContent":["// this file contains all the question data.\n// you should be able to copy paste to make more questions.\n// for now it's silly and requires 0 for all the other answers as it doesn't like null values, feel free to change but this should do for now\n\nconst fs = require('fs');\nconst readline = require('readline');\nconst stream = fs.createReadStream(\"./number.csv\");\nconst reader = readline.createInterface({ input: stream });\nconst questions = [];\n\nreader.on(\"line\", (row) => {\n    let tmp = row.split(',')\n    questions.push({\n        questionText: tmp[0],\n        answerOptions: [\n            {\n            answerText: tmp[1],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[2],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[3],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[4],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[5],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            },\n            {\n            answerText: tmp[6],\n            scores: {\n                collegeARTSCI: tmp[7], \n                collegeBA: tmp[8], \n                collegeEDU: tmp[9], \n                collegeCOM: tmp[10], \n                collegeSCITECH: tmp[11], \n                collegePUBLIC: tmp[12]}\n            }\n        ]\n    });\n})\nreader.on(\"close\", () => {\n    console.log(questions);\n})\n\n/*\nconst questions = [\n\n    //Question 1\n\n    {\n        questionText: 'Question 1: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0 \n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 2\n\n    {\n        questionText: 'Question 2: pick a college',\n        answerOptions: [\n            {\n                answerText: 'Arts and Sciences',\n                scores: {\n                    collegeARTSCI: 1, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Business and Administration',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 1, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Education',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 1, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Communications',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 1, collegeSCITECH: 0, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Science and Technology',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 1, collegePUBLIC: 0\n                }\n            },\n            {\n                answerText: 'Public Affairs',\n                scores: {\n                    collegeARTSCI: 0, collegeBA: 0, collegeEDU: 0, collegeCOM: 0, collegeSCITECH: 0, collegePUBLIC: 1\n                }\n            },\n        ],\n    },\n\n    //Question 3\n\n\n    \n];\n*/\n\nexport default questions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}